<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nafeem Haque</title>
    <link>/</link>
    <description>Recent content on Nafeem Haque</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>haquenafeem.github.io</copyright>
    <lastBuildDate>Fri, 17 Feb 2023 19:53:59 +0600</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gin-Gonic : Rest API implementation for a `todo` resource</title>
      <link>/posts/post-2/</link>
      <pubDate>Fri, 17 Feb 2023 19:53:59 +0600</pubDate>
      
      <guid>/posts/post-2/</guid>
      <description>Initial Steps First create a directory Go to that directory Initialize with &amp;lsquo;go mod init todoapp&amp;rsquo;, usually it is a good practice to initialize with something like github.com/{username}/{reponame} Run go get -u github.com/gin-gonic/gin from cli now let&amp;rsquo;s create an empty main.go file, and have the basic code like this:
package main import ( &amp;#34;fmt&amp;#34; ) func main() { fmt.Println(&amp;#34;hello,world!&amp;#34;) } if you run this program by go run main.go you will get the following output:</description>
    </item>
    
    <item>
      <title>Merging Two Maps In Golang</title>
      <link>/posts/post-1/</link>
      <pubDate>Thu, 16 Feb 2023 02:01:58 +0530</pubDate>
      
      <guid>/posts/post-1/</guid>
      <description>Map is a built in data structure provided by golang. It is used to store key,value pairs. You can use maps for different purposes and therefore it is important to know features and tricks to deal with maps. Today we will take a look at how we can merge two different maps into one.
There could be multiple ways to merge maps including using third party libraries. but lets look at two ways we can achieve this by using just the language itself.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hi There! This is Nafeem Haque, I am a software engineer. I like to learn new things and solve complex problems.
I am experienced in the following technologies
REST(golang,python) Microservices(grpc,golang,python) Face Recognition(opencv,dlib,trueface) Frontend(angular,html,css,javascript) Database(mongo,sqlite3,mysql,postgres,redis) Deployment(docker,docker compose,traefik,nginx,github actions,ssh,aws ec2, digital ocean) Os(linux,windows) Projects I have contributed
RideAlike (www.ridealike.com) [Frontend,Backend,Deployment] Linux Automation (internal golang packages for Evatix Limited) [CLI,APIs,Queueing] Facial Recognition Server(internal service for a simulation based game) [Backend] Third Party APIs used</description>
    </item>
    
  </channel>
</rss>
